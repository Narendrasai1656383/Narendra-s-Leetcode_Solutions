/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public int[][] spiralMatrix(int m, int n, ListNode head) {
        int[][] res=new int[m][n];
        for(int[] arr:res){
            Arrays.fill(arr,-1);
        }   
        int sr=0,sc=0;
        while(head!=null){
            for(int i=sc;i<n && head!=null;i++){
                res[sr][i]=head.val;
                head=head.next;
            }
            sr++;
            for(int i=sr;i<m && head!=null;i++){
                res[i][n-1]=head.val;
                head=head.next;
            }
            n--;
            for(int i=n-1;i>=sc && head!=null;i--){
                res[m-1][i]=head.val;
                head=head.next;
            }
            m--;
            for(int i=m-1;i>=sr && head!=null;i--){
                res[i][sc]=head.val;
                head=head.next;
            }
            sc++;
        }
        return res;
    }
}
