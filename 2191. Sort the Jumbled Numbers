class Solution {
    public int[] sortJumbled(int[] mapping, int[] nums) {
        Map<Integer,Integer> map=new HashMap<>();
        for(int i=0;i<nums.length;i++){
            map.put(i,find(nums[i],mapping));
        }
        List<Map.Entry<Integer,Integer>> l=new ArrayList<>(map.entrySet());
        Collections.sort(l,new Comparator<Map.Entry<Integer,Integer>>(){
            public int compare(Map.Entry<Integer,Integer> o1,Map.Entry<Integer,Integer> o2){
                return o1.getValue().compareTo(o2.getValue());
            }
        });
        int[] num=new int[nums.length];
        int j=0;
        for(Map.Entry<Integer,Integer> m:l){
            num[j++]=nums[m.getKey()];
        }
        return num;
    }
    private int find(int val,int[] mapping){
        int res=0,i=0;
        if(val==0){
            return mapping[val];
        }
        while(val>0){
            res+=mapping[val%10]*Math.pow(10,i++);
            val=val/10;
        }
        return res;
    }
}
