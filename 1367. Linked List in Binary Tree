/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    boolean isConnected=false;
    public boolean isSubPath(ListNode head, TreeNode root) {
        if(head==null){
            return true;
        }
        if(root==null){
            return false;
        }
        if(head.val==root.val){
            connector(head.next,root.left);
            connector(head.next,root.right);
        }
        isSubPath(head,root.left);
        isSubPath(head,root.right);
        return isConnected;
    }
    private void connector(ListNode head, TreeNode root){
        if(head==null){
            isConnected=true;
            return;
        }
        if(root==null){
            return;
        }
        if(head.val==root.val){
            connector(head.next,root.left);
            connector(head.next,root.right);
        }
    }
}
