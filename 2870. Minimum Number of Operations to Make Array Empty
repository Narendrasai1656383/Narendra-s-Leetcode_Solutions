class Solution {
    public int minOperations(int[] nums) {
        Arrays.sort(nums);
        int c = 0;
        for (int i = 0; i < nums.length; i++) {
            if (nums[i] != 0) {
                int cc = countOccurrences(nums, nums[i],i);
                if ((cc % 2 == 0  && cc<=4) && delete(nums, nums[i], i, 2)) {  
                    c =c+1;
                } else {
                    if (!delete(nums, nums[i], i, 3)) {
                        return -1;
                    }
                    c++;
                }
            }
        }
        return c;
    }

    private int countOccurrences(int[] nums, int val,int j) {
        int cc = 0;
        for (int i=j;i<nums.length;i++) {
           if(cc==5)
            return cc;
            if (nums[i]== val) {
                cc++;
            }
            else 
             return cc;
        }
        return cc;
    }

    private boolean delete(int[] nums, int val, int j, int count) {
        for (int i = j; i < nums.length && count > 0; i++) {
            if (nums[i] == val) {
                nums[i] = 0;
                count--;
            }
            else 
            return count==0;
        }
        return count == 0;
    }
}
