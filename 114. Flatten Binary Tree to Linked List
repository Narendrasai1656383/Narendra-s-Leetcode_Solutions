/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public void flatten(TreeNode root) {
        if(root!=null){
            List<Integer> l=new ArrayList<>();
            dfs(root,l);
            root.val=l.get(0);
            root.left=null;
            TreeNode cur=root;
            for(int i=1;i<l.size();i++){
                cur.right=new TreeNode(l.get(i));
                cur=cur.right;
            }
        }
    }
    private void dfs(TreeNode root,List<Integer> l){
        if(root==null){
            return;
        }
        l.add(root.val);
        dfs(root.left,l);
        dfs(root.right,l);
        return;
    }
}
