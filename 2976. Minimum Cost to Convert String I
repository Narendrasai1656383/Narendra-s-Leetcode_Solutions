class Solution {
    public long minimumCost(String source, String target, char[] original, char[] changed, int[] cost) {
        int[][] mat=new int[26][26];
        for(int i=0;i<26;i++){
            for(int j=0;j<26;j++){
                if(i==j){
                    mat[i][j]=0;
                }
                else{
                    mat[i][j]=Integer.MAX_VALUE;
                }
            }
        }
        for(int i=0;i<original.length;i++){
            mat[original[i]-'a'][changed[i]-'a']=Math.min(mat[original[i]-'a'][changed[i]-'a'],cost[i]);
        }
        for(int mid=0;mid<26;mid++){
            for(int i=0;i<26;i++){
                for(int j=0;j<26;j++){
                    if(mat[i][mid]!=Integer.MAX_VALUE && mat[mid][j]!=Integer.MAX_VALUE){
                        mat[i][j]=Math.min(mat[i][j],mat[i][mid]+mat[mid][j]);
                    }
                }
            }
        }
        long sum=0L;
        for(int i=0;i<source.length();i++){
            if(mat[source.charAt(i)-'a'][target.charAt(i)-'a']==Integer.MAX_VALUE){
                return -1;
            }
            else{
                sum+=mat[source.charAt(i)-'a'][target.charAt(i)-'a'];
            }
        }
        return sum;
    }
}
