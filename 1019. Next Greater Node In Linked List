/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    Stack<Integer> st=new Stack<>();
    List<Integer> l=new ArrayList<>();
    public int[] nextLargerNodes(ListNode head) {
        find(head);
        return l.stream().mapToInt(Integer::intValue).toArray();
    }
    private void find(ListNode head){
        if(head==null){
            return;
        }
        find(head.next);
        while(!st.isEmpty() && st.peek()<=head.val){
            st.pop();
        }
        if(st.isEmpty()){
            l.add(0,0);
        }
        else{
            l.add(0,st.peek());
        }
        st.push(head.val);
    }
}
