class Solution {
    public int triangleNumber(int[] nums) {
        Arrays.sort(nums);
        int firstNonZeroIndex = 0;
        while(firstNonZeroIndex<nums.length && nums[firstNonZeroIndex]==0){
            firstNonZeroIndex++;
        }
        if((nums.length - firstNonZeroIndex) < 3 ){
            return 0;
        }
        int triplets = 0;
        for (int i = firstNonZeroIndex; i < nums.length - 2; i++) {
            int k = i + 2;
            for (int j = i + 1; j < nums.length - 1 && nums[i] != 0; j++) {
                k = binarySearch(nums, k, nums.length - 1, nums[i] + nums[j]);
                triplets += k - j - 1;
            }
        }
        return triplets;
    }
    int binarySearch(int nums[], int l, int r, int required) {
        while (r >= l && r < nums.length) {
            int mid = (l + r) / 2;
            if (nums[mid] >= required)
                r = mid - 1;
            else
                l = mid + 1;
        }
        return l;
    }
}
