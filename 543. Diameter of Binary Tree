/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    int d; 
    public int diameterOfBinaryTree(TreeNode root) {
        d = 0;
        depth(root);
        return d;
    }  
    private int depth(TreeNode node) {
        if (node == null)
            return 0;
        int ld = depth(node.left);
        int rd = depth(node.right);
        d = Math.max(d, ld + rd);
        return Math.max(ld, rd) + 1;
    }
}
