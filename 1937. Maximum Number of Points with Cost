class Solution {
    public long maxPoints(int[][] points) {
        int r=points.length, c=points[0].length;
        long[] dp = new long[c];

        for (int j = 0; j < c; j++) {
            dp[j] = points[0][j];
        }

        for(int i=1; i<r; i++) {
            long left[] = new long[c];
            long right[] = new long[c];
            long curr[] = new long[c];

            left[0] = dp[0];
            for(int j=1; j<c; j++) {
                left[j] =  Math.max(left[j-1] - 1 , dp[j]);
            }

            right[c-1] = dp[c-1];
            for(int j=c-2; j>=0; j--) {
                right[j] = Math.max(right[j+1] - 1 , dp[j]);
            }

            for(int j=0; j<c; j++) {
                curr[j] = Math.max(left[j], right[j]) + points[i][j];
            }

            dp = curr;
        }
        long maxi = 0;
        for(long i : dp) maxi = Math.max(maxi, i);
        return maxi;
    }
}
