/*
// Definition for a Node.
class Node {
    public int val;
    public Node prev;
    public Node next;
    public Node child;
};
*/

class Solution {
    public Node flatten(Node head) {
        if(head==null){
            return null;
        }
        Node cur=head;
        while(cur!=null ){
            if(cur.child!=null){
        Node tem=cur.next;
        cur.next=cur.child;
        cur.child.prev=cur;
        cur.child=null;
        Node t=find(cur.next);
        t.next=tem;
        if(tem!=null){
        tem.prev=t;
        }
        }
            cur=cur.next;
        }
        return head;
    }
    public Node find(Node cur){
        while(cur.next!=null){
            cur=cur.next;
        }
        return cur;
    }
}
