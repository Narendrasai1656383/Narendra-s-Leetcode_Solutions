/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public boolean evaluateTree(TreeNode root) {
        return dfs(root)==1?true:false;
    }
    private int dfs(TreeNode root){
        if(root.left==null && root.right==null){
            return root.val;
        }
        root.left.val=dfs(root.left);
        root.right.val=dfs(root.right);
        return (root.val==3 && (root.left.val==1 && root.right.val==1))?1:(root.val==2 && (root.left.val==1 || root.right.val==1))?1:0;
    }
}
