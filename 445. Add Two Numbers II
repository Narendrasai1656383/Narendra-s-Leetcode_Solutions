/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        l1=revrseList(l1);
        l2=revrseList(l2);
        int sum=0,carry=0;
        ListNode res=new ListNode();
        while(l1!=null || l2!=null){
            if(l1!=null){
                sum+=l1.val;
                l1=l1.next;
            }
            if(l2!=null){
                sum+=l2.val;
                l2=l2.next;
            }
            res.val=sum%10;
            carry=sum/10;
            ListNode cur=new ListNode(carry);
            cur.next=res;
            res=cur;
            sum=carry;
        }
        return carry==0?res.next:res;
    }
    private ListNode revrseList(ListNode l){
        ListNode prev=null,temp;
        while(l!=null){
            temp=l.next;
            l.next=prev;
            prev=l;
            l=temp;
        }
        return prev;
    }
}
