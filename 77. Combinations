class Solution {
    public List<List<Integer>> combine(int n, int k) {
        boolean[] num=new boolean[n];
        List<List<Integer>> l=new ArrayList<>();
        backTrack(l,num,n,k,0,new ArrayList<>());
        return l;
    }
    private void backTrack(List<List<Integer>> l,boolean[] arr,int n,int k,int index,List<Integer> ls){
        if(ls.size()==k ){
           l.add(new ArrayList<>(ls));
           return;
        }
        for(int i=index;i<n;i++){
            if(!arr[i]){
                ls.add(i+1);
                arr[i]=true;
                backTrack(l,arr,n,k,i+1,ls);
                arr[i]=false;
                ls.remove(ls.size()-1);
            }
        }
        return; 
    }
}
