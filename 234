/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public boolean isPalindrome(ListNode head) {
        if (head==null || head.next==null){
            return true;
        }
        Stack<Integer> st=new Stack<>();
        ListNode cur=head;
        ListNode prev=head;
        while(cur!=null && cur.next!=null){
            st.push(prev.val);
            prev=prev.next;
            cur=cur.next.next;
        }
        if(cur!=null){
            prev=prev.next;
        }
        while(prev!=null){
            if(st.isEmpty() || st.pop()!=prev.val){
                return false;
            }
            prev=prev.next;
        }
        return true;
    }
}
