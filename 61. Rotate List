/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode rotateRight(ListNode head, int k) {
        if (head == null || head.next == null || k == 0) {
            return head;
        }        
        int l = 1;
        ListNode temp = head;
        while (temp.next != null) {
            temp = temp.next;
            l++;
        }        
        k = k % l;
        if (k == 0) {
            return head;
        }   
        ListNode cur = head;
        for (int i = 1; i < l - k; i++) {
            cur = cur.next;
        }   
        ListNode newh = cur.next;
        cur.next = null;
        temp.next = head;   
        return newh;
    }
}
