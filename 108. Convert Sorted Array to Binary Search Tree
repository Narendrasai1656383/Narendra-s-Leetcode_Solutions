/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public TreeNode sortedArrayToBST(int[] nums) {
        if(nums==null || nums.length==0){
            return null;
        }
        TreeNode root=new TreeNode();
        root.val=nums[nums.length/2];
        int[] arrLeft=new int[nums.length/2];
        System.arraycopy(nums,0,arrLeft,0,nums.length/2);
        root.left=sortedArrayToBST(arrLeft);
        if(nums.length/2<nums.length-1){
            int[] arrRight=new int[nums.length-nums.length/2-1];
            System.arraycopy(nums,nums.length/2+1,arrRight,0,nums.length-nums.length/2-1);
            root.right=sortedArrayToBST(arrRight);
        }
        return root;
    }
}
