/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode reverseKGroup(ListNode head, int k) {
        ListNode temp=head;
        int i=1;
        while(i<k && temp!=null){
            temp=temp.next;
            i++;
        }
        if(temp==null){
            return head;
        }
        ListNode cur=temp.next;
        temp.next=null;
        head=reverse(head);
        temp=head;
        while(temp.next!=null){
            temp=temp.next;
        }
        temp.next=reverseKGroup(cur,k);
        return head;
    }
    private ListNode reverse(ListNode head){
        ListNode temp=head;
        ListNode prev=null;
        while(temp!=null){
            ListNode cur=temp.next;
            temp.next=prev;
            prev=temp;
            temp=cur;
        }
        return prev;
    }
}
